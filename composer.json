{
    "name": "swisnl/agents-sdk",
    "description": "A lightweight yet powerful framework for building multi-agent workflows inspired by the OpenAi Agents SDK",
    "type": "library",
    "keywords": [
        "swisnl",
        "agents-sdk"
    ],
    "homepage": "https://github.com/swisnl/agents-sdk",
    "license": "MIT",
    "authors": [
        {
            "name": "Joris Meijer",
            "email": "joris@swis.nl"
        },
        {
            "name": "Bj√∂rn Brala",
            "email": "bjorn@swis.nl"
        }
    ],
    "require": {
        "php": "^8.2",
        "ext-json": "*",
        "openai-php/client": "^0.10.3 || ^0.13.0 || ^0.14.0",
        "psr/cache": "^3.0",
        "ramsey/uuid": "^4.7"
    },
    "require-dev": {
        "friendsofphp/php-cs-fixer": "^3.73",
        "guzzlehttp/guzzle": "^7.3",
        "laravel/prompts": "^0.3.5",
        "phpstan/phpstan": "^2.1",
        "phpunit/phpunit": "^11.0 || ^12.0",
        "swisnl/mcp-client": "^0.2.1",
        "swisnl/php-http-fixture-client": "^3.1",
        "symfony/console": "^7.2",
        "vlucas/phpdotenv": "^5.6"
    },
    "suggest": {
        "swisnl/mcp-client": "For using the MCP funtionality with the predefined MCP client"
    },
    "autoload": {
        "psr-4": {
            "Swis\\Agents\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Swis\\Agents\\Tests\\": "tests/"
        }
    },
    "scripts": {
        "test": "vendor/bin/phpunit",
        "test-coverage": "vendor/bin/phpunit --coverage",
        "check-style": "vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --allow-risky=yes",
        "fix-style": "vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --allow-risky=yes",
        "phpstan": "vendor/bin/phpstan analyse",
        "lint": [
            "vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --allow-risky=yes",
            "vendor/bin/phpstan analyse --memory-limit=-1"
        ]
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "phpstan/extension-installer": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "beta",
    "prefer-stable": true
}
